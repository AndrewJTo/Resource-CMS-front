
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$cmsfront-primary: mat-palette($mat-blue);
$cmsfront-accent: mat-palette($mat-blue, A200, A100, A400);

// The warn palette is optional (defaults to red).
$cmsfront-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$cmsfront-theme: mat-light-theme((
  color: (
    primary: $cmsfront-primary,
    accent: $cmsfront-accent,
    warn: $cmsfront-warn,
  )
));

@mixin cmsfront-login-color($config-or-theme) {
	$config: mat-get-color-config($config-or-theme);
	$warn: map-get($config, warn);

	.login-error {
		color: mat-color($warn);
	}
}

@mixin cmsfront-login-theme($theme) {
	$color: mat-get-color-config($theme);
	@if $color != null {
		@include cmsfront-login-color($color);
	}
}

// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($cmsfront-theme);

@include cmsfront-login-theme($cmsfront-theme);
